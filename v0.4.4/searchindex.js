Search.setIndex({"docnames": ["api/crossover", "api/diversity", "api/plotting", "api/pyvrp", "api/search", "api/stop", "dev/benchmarking", "dev/contributing", "examples/cvrp", "examples/vrptw", "index", "setup/benchmarks", "setup/getting_help", "setup/installation", "setup/introduction_to_hgs", "setup/introduction_to_vrp"], "filenames": ["api/crossover.rst", "api/diversity.rst", "api/plotting.rst", "api/pyvrp.rst", "api/search.rst", "api/stop.rst", "dev/benchmarking.rst", "dev/contributing.rst", "examples/cvrp.ipynb", "examples/vrptw.ipynb", "index.rst", "setup/benchmarks.rst", "setup/getting_help.rst", "setup/installation.rst", "setup/introduction_to_hgs.rst", "setup/introduction_to_vrp.rst"], "titles": ["Crossover operators", "Diversity measures", "Plotting tools", "PyVRP", "Search", "Stopping criteria", "Benchmarking", "Contributing", "Capacitated Vehicle Routing Problem", "Vehicle Routing Problem with Time Windows", "Contents", "Benchmarks", "Getting help", "Installation instructions", "A brief introduction to HGS", "A brief introduction to VRP"], "terms": {"The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15], "pyvrp": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15], "modul": [0, 1, 2, 3, 4, 5], "provid": [0, 1, 2, 3, 4, 6, 14], "ar": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 15], "respons": [0, 4], "gener": [0, 3, 4, 14], "new": [0, 4, 7, 10, 11, 12, 14], "solut": [0, 1, 2, 3, 4, 5, 8, 9, 11, 14, 15], "offspr": [0, 3, 4, 14], "from": [0, 1, 3, 4, 6, 7, 8, 10, 12, 14, 15], "two": [0, 1, 3, 4, 6, 14], "parent": [0, 3, 14], "selective_route_exchang": [0, 8, 9], "tupl": [0, 2, 3], "data": [0, 2, 3, 4, 8, 9], "problemdata": [0, 2, 3, 4, 8, 9], "cost_evalu": [0, 3, 4, 8, 9], "costevalu": [0, 3, 4, 8, 9], "rng": [0, 3, 4, 8, 9], "xorshift128": [0, 3, 4, 8, 9], "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "due": 0, "nagata": 0, "kobayashi": 0, "2010": 0, "combin": [0, 14], "rout": [0, 1, 2, 3, 10, 14], "both": [0, 3, 14], "It": [0, 3, 10, 15], "doe": [0, 3, 8], "carefulli": 0, "select": [0, 3, 10, 14], "second": [0, 1, 3, 6, 8, 9], "could": 0, "exchang": 0, "first": [0, 1, 2, 3, 4, 5, 8, 9, 10, 13, 14], "after": [0, 3, 4, 5, 6, 7, 13, 14], "result": [0, 2, 3, 4, 8, 11, 14], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15], "repair": [0, 3], "us": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "greedi": 0, "strategi": [0, 3, 10], "paramet": [0, 1, 2, 3, 4, 5, 15], "creat": [0, 2, 3, 4, 7, 9, 15], "an": [0, 3, 4, 6, 8, 10, 14, 15], "problem": [0, 1, 2, 3, 4, 10, 12, 14], "instanc": [0, 2, 3, 4, 6, 10, 15], "cost": [0, 3, 4, 8, 9, 15], "evalu": [0, 3, 4, 8, 15], "dure": [0, 9], "step": [0, 8], "random": [0, 3, 4, 14], "number": [0, 2, 3, 4, 5, 7, 8, 9], "return": [0, 1, 2, 3, 4, 8, 9, 14, 15], "A": [0, 1, 3, 4, 8, 9, 10], "refer": [0, 6, 14], "1": [0, 1, 2, 3, 4, 8, 9, 11, 15], "y": [0, 2, 3, 9], "": [0, 1, 2, 3, 4, 5, 8, 9, 14], "memet": 0, "algorithm": [0, 1, 2, 3, 8, 9, 10, 14, 15], "pickup": 0, "deliveri": [0, 9, 15], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14], "window": [0, 2, 3, 8, 10, 14], "parallel": 0, "solv": [0, 3, 4, 10, 14, 15], "natur": 0, "ppsn": 0, "xi": 0, "536": 0, "545": 0, "contain": [1, 2, 3, 4, 5, 9, 11, 12, 13], "oper": [1, 3, 10, 14, 15], "determin": [1, 3, 4, 15], "rel": [1, 15], "differ": [1, 3, 6, 9], "between": [1, 3, 4, 9], "object": [1, 2, 3, 4, 6, 8, 9, 14, 15], "popul": [1, 2, 3, 8, 9, 10, 14], "highli": [1, 10], "allow": [1, 3, 9, 10, 14, 15], "genet": [1, 2, 3, 10, 14, 15], "perform": [1, 2, 3, 4, 6, 7, 10, 14], "better": [1, 2, 4, 14], "At": 1, "same": [1, 4, 15], "one": [1, 3, 6, 7, 9, 15], "also": [1, 3, 8, 9, 13, 14, 15], "want": [1, 7, 13], "balanc": [1, 3, 15], "qualiti": [1, 14], "should": [1, 3, 6, 7, 9], "good": [1, 9], "That": [1, 3], "maintain": [1, 7, 10, 14], "comput": [1, 3, 4, 6, 8, 9, 15], "fit": [1, 3, 14], "score": [1, 6], "each": [1, 2, 3, 4, 6, 7, 8, 9, 11, 15], "which": [1, 2, 3, 4, 7, 8, 9, 14, 15], "valu": [1, 2, 3, 8, 9, 11, 14], "broken_pairs_dist": [1, 8, 9], "_pyvrp": [1, 3, 4], "symmetr": [1, 4, 8, 9], "broken": 1, "pair": [1, 3, 4], "distanc": [1, 2, 3, 8, 9, 15], "bpd": [1, 8, 9], "given": [1, 2, 3, 4, 5, 14, 15], "function": [1, 2, 3, 7, 8, 9], "whether": [1, 2, 3, 4], "client": [1, 2, 3, 4, 6, 8, 9, 15], "share": [1, 4], "neighbour": [1, 3, 4, 8], "If": [1, 3, 7, 10, 14], "part": [1, 3, 8], "link": 1, "other": [1, 4], "formal": 1, "f": [1, 8, 9], "let": [1, 3, 8, 9], "p_f": [1, 3], "p_": 1, "preced": 1, "depot": [1, 2, 3, 4, 8, 9, 15], "ldot": 1, "n": [1, 6, 8, 9, 14, 15], "respect": [1, 3], "similarli": [1, 3], "defin": [1, 4, 8, 9], "s_f": 1, "s_": [1, 9, 14, 15], "succeed": 1, "Then": [1, 7, 9, 13], "we": [1, 3, 6, 7, 8, 9, 13, 14, 15], "have": [1, 2, 3, 7, 8, 9, 10, 12, 13, 15], "text": 1, "frac": 1, "sum_": [1, 3], "1_": 1, "ne": 1, "2n": 1, "note": [1, 4, 9], "our": [1, 7, 8, 9], "definit": 1, "direct": 1, "2": [1, 3, 4, 6, 8, 9, 11, 15], "3": [1, 3, 8, 9, 11], "4": [1, 3, 6, 8, 9], "consid": [1, 4, 15], "complet": [1, 3, 7, 8, 9, 10, 15], "float": [1, 2, 3, 4, 5, 8, 9], "0": [1, 2, 3, 4, 8, 9, 11, 15], "indic": [1, 3, 4, 9], "percentag": [1, 3], "suggest": [1, 14], "maxim": 1, "zero": [1, 3], "thei": [1, 15], "variou": [2, 3, 5, 9, 10, 14, 15], "those": [2, 4, 6], "These": [2, 3, 5, 6, 7], "can": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15], "understand": 2, "your": [2, 3, 6, 7, 12, 13], "help": [2, 3, 6, 7, 10], "investig": 2, "plot_coordin": [2, 8], "titl": [2, 9], "str": [2, 3], "coordin": [2, 3, 8, 9], "ax": [2, 8, 9], "none": [2, 3, 8, 9, 15], "option": [2, 3, 6, 8, 9, 13, 15], "add": [2, 3, 4, 7, 14], "draw": [2, 3], "One": [2, 7], "plot_demand": [2, 8], "demand": [2, 3, 4, 8, 9, 15], "vertic": [2, 3, 9], "bar": [2, 9], "sort": 2, "plot_divers": 2, "divers": [2, 3, 8, 9, 10, 14], "statist": [2, 3, 8, 9], "rais": [2, 3, 4], "statisticsnotcollectederror": 2, "when": [2, 3, 4, 5, 7, 9, 15], "been": [2, 3, 5, 10, 15], "collect": [2, 3, 10], "plot_inst": [2, 9], "fig": [2, 8, 9], "figur": [2, 8, 9], "plot_object": 2, "num_to_skip": 2, "int": [2, 3, 4, 5, 8, 9], "ylim_adjust": 2, "95": 2, "15": [2, 3, 8, 9], "subpopul": 2, "initi": [2, 3, 14], "iter": [2, 3, 4, 5, 14], "skip": 2, "earli": [2, 9], "often": [2, 3, 7, 15], "veri": [2, 4], "high": [2, 3, 10, 14], "obscur": 2, "what": [2, 7, 8, 9], "go": [2, 13, 15], "later": [2, 8], "search": [2, 3, 5, 10, 14, 15], "default": [2, 3, 4, 8], "5": [2, 3, 8, 9], "bound": 2, "axi": [2, 9], "best": [2, 3, 5, 8, 9, 11, 14], "where": [2, 3, 8, 9, 13, 15], "denot": [2, 8, 9, 15], "found": [2, 3, 4, 8, 9, 14, 15], "feasibl": [2, 3, 8, 9, 15], "plot_result": [2, 8, 9], "run": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "includ": [2, 3, 7, 8, 9, 10, 12, 15], "detail": [2, 3, 7, 9], "about": [2, 6, 7, 9, 12], "avail": [2, 3, 4, 6, 8, 9, 15], "underli": 2, "plot_route_schedul": [2, 9], "legend": [2, 9], "bool": [2, 3, 4], "true": [2, 3, 4, 8, 9], "schedul": 2, "multipl": 2, "travel": [2, 3, 8, 9, 15], "solid": 2, "earliest": [2, 3, 9, 15], "possibl": [2, 3, 7, 15], "trajectori": 2, "warp": [2, 3, 4], "infeas": [2, 3], "shade": 2, "slack": [2, 9], "up": [2, 8, 9, 10, 13], "latest": [2, 3, 9, 13, 15], "onli": [2, 3, 4, 7, 13, 14], "dash": 2, "dot": [2, 8, 9, 14, 15], "drive": [2, 9], "servic": [2, 3, 8, 9, 15], "exclud": [2, 3], "wait": [2, 3, 4, 9, 15], "pure": 2, "grei": [2, 9], "background": [2, 9], "remain": [2, 9], "load": [2, 3, 9], "vehicl": [2, 3, 10, 14], "list": [2, 3, 4, 10, 11, 15], "whose": [2, 3], "show": [2, 8, 9], "plot_runtim": 2, "runtim": [2, 3, 5, 6], "plot_solut": 2, "plot_custom": 2, "fals": [2, 3, 4], "custom": [2, 6, 8, 9, 15], "plot_time_window": 2, "top": [3, 9], "level": 3, "expos": 3, "sever": 3, "core": [3, 6], "class": [3, 4, 5, 7], "need": [3, 4, 7, 8, 9, 12, 13, 14], "vrp": [3, 8, 9, 10, 14], "solver": [3, 8, 9, 15], "geneticalgorithm": [3, 4, 5, 8, 9], "manag": [3, 8, 9, 10], "pool": 3, "most": [3, 7, 13, 15], "take": [3, 6, 7, 8, 12, 13, 14], "advanc": [3, 10], "configur": [3, 4, 7, 11], "sensibl": 3, "final": [3, 4, 9], "obtain": [3, 8, 11, 14, 15], "observ": 3, "look": [3, 9, 10], "exampl": [3, 5, 7, 14, 15], "see": [3, 7, 8, 9, 11, 14, 15], "how": [3, 4, 7, 8, 9, 11, 14], "relat": 3, "model": 3, "simpl": [3, 15], "interfac": [3, 6], "attribut": [3, 4, 7], "locat": [3, 9, 15], "all": [3, 4, 5, 7, 8, 9, 13, 15], "current": [3, 4, 10, 15], "vehicle_typ": 3, "type": [3, 7, 8, 9], "method": [3, 4, 5, 7, 14, 15], "add_client": 3, "x": [3, 6, 8, 9], "service_dur": [3, 9], "tw_earli": 3, "tw_late": [3, 8], "release_tim": 3, "prize": [3, 10], "requir": [3, 7, 10, 15], "add_depot": 3, "yet": [3, 13], "support": [3, 7, 10], "multi": 3, "For": [3, 6, 7, 14, 15], "now": [3, 7, 8, 9, 13], "ad": [3, 4, 7, 14], "add_edg": 3, "frm": 3, "durat": [3, 4, 8, 9], "edg": [3, 4], "j": [3, 4, 8, 9, 15], "valueerror": [3, 4], "either": 3, "neg": 3, "add_vehicle_typ": 3, "capac": [3, 8, 9, 15], "num_avail": 3, "vehicletyp": 3, "posit": [3, 4], "classmethod": 3, "from_data": 3, "construct": 3, "feed": 3, "repres": [3, 4, 8, 9, 11, 15], "properti": 3, "index": [3, 13], "stop": [3, 8, 9, 10, 14], "stoppingcriterion": [3, 5, 8, 9], "seed": [3, 6, 8, 9, 11], "criterion": [3, 5, 14], "prng": 3, "geneticalgorithmparam": [3, 8, 9], "repair_prob": 3, "8": [3, 9], "collect_statist": [3, 8, 9], "intensify_prob": 3, "intensify_on_best": 3, "nb_iter_no_improv": 3, "20000": 3, "penalty_manag": 3, "penaltymanag": [3, 8, 9], "local_search": 3, "localsearch": [3, 4, 8, 9], "crossover_op": 3, "crossoveroper": 3, "initial_solut": 3, "param": [3, 4, 8, 9], "describ": [3, 4], "penalti": [3, 8, 9], "local": [3, 4, 9, 10, 14, 15], "crossov": [3, 4, 8, 9, 10, 14], "initialis": [3, 6, 8, 14], "empti": [3, 4], "until": [3, 4, 8, 9, 14], "penaltyparam": 3, "init_capacity_penalti": 3, "20": [3, 7, 8, 11], "init_time_warp_penalti": 3, "6": [3, 8, 9], "repair_boost": 3, "12": 3, "num_registrations_between_penalty_upd": 3, "50": 3, "penalty_increas": 3, "34": 3, "penalty_decreas": 3, "32": [3, 9, 11], "target_feas": 3, "43": [3, 11], "excess": 3, "amount": [3, 4, 12], "unit": 3, "penalis": 3, "start": [3, 9, 15], "violat": 3, "booster": 3, "r": [3, 9], "ge": [3, 8, 9, 15], "temporarili": 3, "multipli": 3, "term": 3, "forc": 3, "get_booster_cost_evalu": 3, "registr": 3, "updat": [3, 13], "everi": [3, 7, 14], "onc": [3, 7, 8, 9, 13, 15], "while": [3, 7, 10, 15], "base": [3, 9], "recent": [3, 7, 11], "control": [3, 4], "occur": 3, "p_i": [3, 15], "increas": 3, "insuffici": 3, "amongst": 3, "v": [3, 8, 9, 15], "get": [3, 6, 8, 9, 13, 14], "p_d": 3, "decreas": 3, "suffici": 3, "target": 3, "last": 3, "regist": [3, 4, 14], "too": [3, 7, 9], "mani": [3, 15], "ensur": [3, 4, 14], "fraction": 3, "histori": 3, "temporari": 3, "short": [3, 12], "boost": 3, "get_cost_evalu": [3, 8, 9], "register_load_feas": 3, "is_load_feas": 3, "anoth": 3, "gather": 3, "boolean": 3, "wa": [3, 4], "w": 3, "t": 3, "constraint": [3, 8, 15], "register_time_feas": 3, "is_time_feas": 3, "populationparam": [3, 8, 9], "min_pop_s": [3, 8, 9], "25": [3, 11], "generation_s": 3, "40": [3, 4], "nb_elit": 3, "nb_close": 3, "lb_divers": 3, "ub_divers": 3, "max_pop_s": 3, "diversity_op": 3, "callabl": 3, "pairwis": 3, "__iter__": 3, "over": [3, 9, 11, 14], "yield": 3, "__len__": 3, "size": [3, 4, 14], "survivor": [3, 14], "automat": [3, 7], "trigger": 3, "reach": [3, 14], "its": 3, "maximum": [3, 5, 8, 9, 14, 15], "clear": [3, 7], "remov": [3, 14], "get_tourna": 3, "k": [3, 14, 15], "ari": [3, 14], "tournament": [3, 14], "intern": 3, "binari": [3, 10], "num_feas": 3, "num_infeas": 3, "non": [3, 4, 5, 9], "ident": 3, "subject": [3, 7], "restrict": 3, "read": [3, 8, 10], "pathlib": 3, "path": 3, "instance_format": [3, 9], "vrplib": [3, 8, 9], "round_func": [3, 8, 9], "numpi": [3, 7], "ndarrai": 3, "no_round": 3, "file": [3, 7, 8, 9, 11], "assum": [3, 6, 8, 9, 15], "format": [3, 9], "solomon": [3, 9], "round": [3, 8, 9], "Will": 3, "appli": [3, 4, 14], "alreadi": [3, 9], "integ": [3, 4, 9], "string": 3, "nearest": [3, 8], "trunc": 3, "truncat": 3, "integr": [3, 8, 9], "trunc1": [3, 9], "dimac": [3, 9, 11], "scale": [3, 6], "decim": [3, 9], "read_solut": [3, 8, 9], "stat": 3, "num_iter": 3, "store": 3, "outcom": 3, "singl": [3, 6, 8], "were": 3, "total": [3, 8, 9, 15], "main": [3, 9], "loop": [3, 14], "inf": 3, "has_statist": 3, "availab": 3, "plot": [3, 10], "cannot": 3, "otherwis": 3, "is_feas": 3, "show_vers": [3, 12], "print": [3, 8, 9], "version": [3, 7, 11, 12, 13], "inform": [3, 12], "bug": 3, "report": [3, 11], "call": [3, 4], "like": [3, 9, 13], "follow": [3, 7, 8, 9, 12, 14, 15], "depend": [3, 13], "instal": [3, 6, 10, 12], "import": [3, 4, 9, 12], "24": [3, 9], "matplotlib": [3, 8, 9], "7": [3, 8, 9], "tqdm": 3, "64": 3, "tomli": 3, "python": [3, 10, 12, 13], "9": [3, 8, 9], "13": [3, 11], "factori": 3, "feas_stat": 3, "_datum": 3, "infeas_stat": 3, "track": [3, 7], "analys": 3, "collect_from": 3, "from_csv": 3, "delimit": 3, "kwarg": [3, 5, 8, 9], "csv": 3, "filesystem": 3, "separ": [3, 9], "comma": 3, "addit": [3, 10, 15], "keyword": 3, "argument": [3, 4, 7, 8, 9], "pass": [3, 4, 8, 9], "dictread": 3, "to_csv": 3, "quot": 3, "write": 3, "necessari": [3, 7, 8, 9], "dictwrit": 3, "capacity_penalti": 3, "tw_penalti": 3, "hand": 3, "wave": 3, "some": [3, 4, 5, 7, 8, 9, 15], "x_": 3, "ij": [3, 8, 9, 15], "encod": 3, "y_i": 3, "visit": [3, 8, 9, 15], "d_": [3, 8, 9, 15], "unvisit": 3, "load_penalti": 3, "vehicle_capac": 3, "penalised_cost": 3, "time_warp": [3, 9], "plan": 3, "centroid": 3, "center": [3, 4], "point": [3, 14], "excess_load": 3, "has_excess_load": 3, "has_time_warp": 3, "releas": [3, 7], "ani": [3, 7], "incur": 3, "along": 3, "wait_dur": [3, 9], "In": [3, 8, 9, 14, 15], "case": [3, 8, 9, 10], "latter": 3, "assign": 3, "runtimeerror": [3, 4], "exce": [3, 8, 9, 14, 15], "num_vehicl": 3, "ha": [3, 5, 6, 7, 8, 9, 10, 13, 14, 15], "particular": 3, "get_neighbour": [3, 4], "itself": 3, "pred": 3, "succ": 3, "predecessor": 3, "successor": 3, "get_rout": [3, 9], "decis": 3, "length": 3, "equal": [3, 9], "end": [3, 8, 9, 15], "implicit": 3, "shorthand": 3, "check": [3, 7, 15], "make_random": [3, 8, 9], "randomli": 3, "num_client": 3, "num_rout": 3, "uncollected_pr": 3, "uncollect": 3, "horizont": 3, "necessarili": 3, "within": [3, 9, 15], "interv": 3, "mai": [3, 6, 11, 15], "leav": 3, "must": [3, 5, 7, 9, 15], "distance_matrix": 3, "duration_matrix": 3, "overal": [3, 4], "horizon": 3, "matrix": [3, 4, 9], "give": [3, 9], "retriev": 3, "request": [3, 7, 15], "dist": 3, "accord": 3, "num_vehicle_typ": 3, "__call__": 3, "__init__": 3, "static": 3, "max": 3, "min": 3, "rand": 3, "randint": 3, "improv": [4, 5, 14], "newli": 4, "happen": [4, 5], "just": 4, "explor": [4, 14], "granular": [4, 10], "neighbourhood": [4, 10], "effici": [4, 14, 15], "manner": 4, "user": [4, 10], "quickli": [4, 6], "much": 4, "add_node_oper": [4, 8, 9], "op": [4, 8, 9], "nodeoper": 4, "add_route_oper": [4, 8, 9], "routeoper": 4, "intensifi": 4, "more": [4, 7, 9, 14, 15], "expens": 4, "overlap_tolerance_degre": 4, "To": [4, 6, 8, 9, 10, 12, 13], "limit": [4, 6, 12, 15], "intensif": 4, "move": 4, "effort": 4, "overlap": 4, "angl": 4, "evalut": 4, "befor": [4, 9, 15], "should_intensifi": 4, "thereaft": 4, "process": 4, "repeat": [4, 14], "further": [4, 14], "through": [4, 10], "computation": 4, "By": [4, 8], "set_neighbour": 4, "conveni": 4, "replac": 4, "neighbourhoodparam": [4, 8], "weight_wait_tim": 4, "weight_time_warp": 4, "nb_granular": [4, 8], "symmetric_proxim": 4, "symmetric_neighbour": 4, "calcul": 4, "weight": [4, 8, 9, 15], "minimum": [4, 14], "aspect": [4, 10], "proxim": 4, "larg": 4, "far": [4, 14], "apart": 4, "symmetris": 4, "structur": 4, "so": [4, 9, 13, 14], "compute_neighbour": [4, 8, 9], "element": 4, "via": [4, 7, 10, 13], "As": [4, 8, 15], "make": [4, 7, 13], "node_oper": [4, 8, 9], "exchange10": 4, "exchange20": 4, "exchange30": 4, "exchange11": 4, "exchange21": 4, "exchange31": 4, "exchange22": 4, "exchange32": 4, "exchange33": 4, "movetwoclientsrevers": 4, "twoopt": 4, "route_oper": [4, 8, 9], "relocatestar": 4, "swapstar": 4, "packag": [5, 7, 10, 11, 13, 14], "ship": 5, "whenev": [5, 7], "met": [5, 8, 9, 14], "exceed": 5, "implement": [5, 8, 9, 10, 14, 15], "protocol": 5, "arg": 5, "maxiter": [5, 8, 9], "max_iter": [5, 8, 9], "maxruntim": [5, 8, 9], "max_runtim": [5, 8, 9], "specifi": [5, 12, 15], "noimprov": 5, "fix": 5, "timednoimprov": 5, "without": [5, 10], "whichev": 5, "command": [6, 7, 12], "line": [6, 7, 9, 12], "find": [6, 8, 9, 15], "out": [6, 15], "mostli": 6, "crvplib": 6, "particularli": 6, "cvrp": [6, 8, 10, 11, 15], "uchoa": 6, "cpu": 6, "passmark": 6, "2183": 6, "thu": [6, 10], "100": [6, 8, 9], "ran": 6, "240": 6, "vrptw": [6, 8, 9, 10, 11, 15], "gehr": 6, "homberg": 6, "1000": [6, 9], "hour": 6, "2000": 6, "pc": [6, 11, 15], "modifi": 6, "ten": [6, 11], "averag": [6, 11], "gap": [6, 11], "set": [6, 8, 9, 10, 13, 14, 15], "repositori": [6, 7, 12, 13], "submodul": 6, "git": [6, 7, 13], "init": [6, 8, 9], "convers": [7, 12], "develop": [7, 12, 15], "issu": [7, 12], "place": [7, 12], "github": [7, 12, 13], "feel": [7, 12], "free": [7, 12], "open": [7, 9, 12, 13, 15], "you": [7, 10, 12, 13, 14], "someth": [7, 12], "discuss": [7, 12], "sure": [7, 13], "reason": 7, "modern": 7, "c": [7, 12, 14], "compil": [7, 10], "standard": [7, 9], "do": [7, 12, 15], "proce": 7, "fork": 7, "websit": 7, "clone": [7, 13], "environ": [7, 13], "http": [7, 13], "com": [7, 13], "usernam": 7, "directori": 7, "virtual": [7, 13], "poetri": [7, 13], "cd": [7, 13], "pip": [7, 10, 13], "upgrad": [7, 13], "doc": 7, "dev": 7, "might": [7, 10, 13], "few": [7, 13], "minut": [7, 13], "done": [7, 13], "everyth": [7, 13], "smoothli": 7, "execut": 7, "test": 7, "suit": 7, "pytest": 7, "pre": [7, 10], "simpli": [7, 13], "style": 7, "featur": [7, 14], "branch": [7, 15], "written": 7, "built": [7, 8], "mode": 7, "typic": 7, "debug": 7, "made": [7, 13], "build_extens": 7, "py": 7, "script": 7, "directli": [7, 10, 13], "discov": 7, "meson": 7, "system": 7, "root": 7, "touch": 7, "handl": 7, "pull": 7, "accept": 7, "meet": 7, "below": [7, 10, 11], "greatli": 7, "reduc": 7, "job": 7, "softwar": 7, "cheap": 7, "easi": [7, 10], "merg": 7, "delet": 7, "click": 7, "avoid": 7, "temptat": 7, "lump": 7, "bunch": 7, "unrel": 7, "work": [7, 14], "u": [7, 9], "keep": 7, "prepar": 7, "messag": 7, "concis": 7, "mean": [7, 15], "less": 7, "than": [7, 8, 9, 14], "80": 7, "charact": 7, "blank": 7, "bodi": 7, "code": [7, 10, 12], "submiss": 7, "alwai": [7, 8], "document": [7, 10], "docstr": 7, "conform": 7, "edit": 7, "appropri": 7, "sourc": [7, 10], "pars": [7, 9], "correctli": 7, "pleas": [7, 10, 12], "templat": [7, 12], "notebook": [8, 9, 13, 15], "librari": [8, 9], "graph": [8, 9, 15], "g": [8, 9, 15], "vertex": [8, 9, 15], "arc": [8, 9, 15], "partit": [8, 9, 15], "cup": [8, 9, 15], "v_c": [8, 9, 15], "euclidean": [8, 9], "q_": [8, 9, 15], "unlimit": [8, 9], "homogen": [8, 9, 15], "q": [8, 9, 15], "consist": [8, 9, 15], "begin": [8, 9, 15], "exactli": [8, 9, 15], "minim": [8, 9], "util": [8, 9], "compon": [8, 9], "dict": [8, 9], "pyplot": [8, 9], "plt": [8, 9], "srex": [8, 9], "n439": 8, "k37": 8, "wide": 8, "benchmark": [8, 10, 15], "convert": [8, 9], "convent": [8, 9], "known": [8, 9, 11], "instance_bk": [8, 9], "sol": [8, 9], "sinc": [8, 9], "placehold": 8, "556652": 8, "figsiz": [8, 9], "add_gridspec": 8, "width_ratio": 8, "add_subplot": 8, "tight_layout": [8, 9], "next": 8, "desir": [8, 9], "def": [8, 9], "pen_manag": [8, 9], "pop_param": [8, 9], "pop": [8, 9], "nb_param": 8, "l": [8, 9, 14], "_": [8, 9], "rang": [8, 9], "ga_param": [8, 9], "algo": [8, 9], "els": [8, 9], "assert": [8, 9], "compar": [8, 9], "report_gap": [8, 9], "best_cost": [8, 9], "bk": [8, 9], "bks_cost": [8, 9], "pct_diff": [8, 9], "1f": [8, 9], "wors": [8, 9], "42": [8, 9], "30": [8, 9], "36481": 8, "36391": 8, "ve": [8, 9], "optim": [8, 9, 15], "493": 8, "moreov": [8, 9], "demonstr": [8, 9], "tool": [8, 10], "visual": 8, "throughout": 8, "procedur": [8, 14], "hard": [9, 15], "left": [9, 15], "e_i": [9, 15], "l_i": [9, 15], "right": [9, 15], "arriv": [9, 15], "h": [9, 15], "serv": 9, "three": 9, "diagnost": 9, "analyz": 9, "ll": 9, "tabul": 9, "classic": 9, "oppos": 9, "precis": 9, "multiplii": 9, "10": 9, "e": [9, 15], "challeng": 9, "rc208": 9, "impress": 9, "plot_": 9, "scale_factor": 9, "776": 9, "well": 9, "num_stop": 9, "len": 9, "datum": 9, "kei": 9, "tablefmt": 9, "html": 9, "27": 9, "2187": 9, "2700": 9, "2156": 9, "465": 9, "1983": 9, "2400": 9, "2479": 9, "381": 9, "17": 9, "1325": 9, "1700": 9, "2991": 9, "286": 9, "2266": 9, "3200": 9, "1829": 9, "592": 9, "verifi": 9, "sum": 9, "total_dist": 9, "actual": 9, "jump": 9, "semi": 9, "transpar": 9, "region": 9, "truck": 9, "axarr": 9, "subplot": 9, "idx": 9, "enumer": 9, "zip": 9, "reshap": 9, "try": 9, "largest": 9, "instance_gh": 9, "rc2_10_5": 9, "bks_gh": 9, "result_gh": 9, "best_cost_gh": 9, "26548": 9, "25797": 9, "real": 9, "road": 9, "atyp": 9, "distribut": 9, "11": [9, 11], "name_ortec": 9, "asym": 9, "0bdff870": 9, "d1": 9, "n458": 9, "k35": 9, "instance_ortec": 9, "txt": 9, "bks_ortec": 9, "result_ortec": 9, "best_cost_ortec": 9, "259297": 9, "258704": 9, "offer": 10, "hybrid": [10, 14], "capacit": [10, 14], "build": 10, "hg": [10, 11], "redesign": 10, "customis": 10, "speed": 10, "state": [10, 15], "art": [10, 15], "variant": 10, "inspir": 10, "addition": 10, "come": 10, "mac": 10, "o": [10, 14], "linux": 10, "easili": 10, "metaheurist": [10, 15], "benefit": 10, "introduct": 10, "page": [10, 11, 13], "yourself": 10, "instruct": [10, 11], "brief": 10, "measur": 10, "criteria": [10, 14], "contribut": 10, "tabl": 11, "signific": 11, "config": 11, "toml": 11, "date": 11, "2023": 11, "21": 11, "28": 11, "februari": 11, "22": 11, "45": 11, "name": 11, "triag": 12, "self": 12, "snippet": 12, "reproduc": 12, "output": [12, 14], "straightforward": 13, "wai": 13, "project": 13, "group": 13, "goe": 13, "resolv": 13, "jupyt": 13, "browser": 13, "navig": 13, "folder": 13, "global": 14, "capabl": 14, "fine": 14, "tune": 14, "approach": 14, "effect": [14, 15], "exploit": 14, "space": 14, "lead": 14, "thorough": 14, "paper": 14, "vidal": 14, "et": 14, "al": 14, "2013": 14, "2022": 14, "input": 14, "exist": 14, "favour": 14, "higher": 14, "inherit": 14, "candid": 14, "upon": 14, "mechan": 14, "least": 14, "back": 14, "continu": 14, "pseudocod": 14, "s_1": 14, "p_1": 14, "p_2": 14, "xo": 14, "lowest": [14, 15], "setup": 14, "studi": 15, "field": 15, "research": 15, "motiv": 15, "applic": 15, "postal": 15, "wast": 15, "overarch": 15, "goal": 15, "fulfil": 15, "transport": 15, "enorm": 15, "potenti": 15, "save": 15, "primari": 15, "focu": 15, "consider": 15, "complex": 15, "classifi": 15, "np": 15, "heurist": 15, "exact": 15, "tackl": 15, "cut": 15, "primarili": 15, "guarante": 15, "rigor": 15, "them": 15, "vrpsolvereasi": 15, "section": 15, "introduc": 15, "extens": 15, "toth": 15, "vigo": 15, "2014": 15, "fleet": 15, "minimis": 15, "t_": 15, "mandatori": 15, "compet": 15, "maximis": 15}, "objects": {"": [[3, 0, 0, "-", "pyvrp"]], "pyvrp": [[3, 0, 0, "-", "GeneticAlgorithm"], [3, 0, 0, "-", "Model"], [3, 0, 0, "-", "PenaltyManager"], [3, 0, 0, "-", "Population"], [3, 0, 0, "-", "Result"], [3, 0, 0, "-", "Statistics"], [3, 0, 0, "-", "_pyvrp"], [0, 0, 0, "-", "crossover"], [1, 0, 0, "-", "diversity"], [2, 0, 0, "-", "plotting"], [3, 0, 0, "-", "read"], [4, 0, 0, "-", "search"], [3, 0, 0, "-", "show_versions"], [5, 0, 0, "-", "stop"]], "pyvrp.GeneticAlgorithm": [[3, 1, 1, "", "GeneticAlgorithm"], [3, 1, 1, "", "GeneticAlgorithmParams"]], "pyvrp.GeneticAlgorithm.GeneticAlgorithm": [[3, 2, 1, "", "run"]], "pyvrp.Model": [[3, 1, 1, "", "Model"]], "pyvrp.Model.Model": [[3, 2, 1, "", "add_client"], [3, 2, 1, "", "add_depot"], [3, 2, 1, "", "add_edge"], [3, 2, 1, "", "add_vehicle_type"], [3, 2, 1, "", "data"], [3, 2, 1, "", "from_data"], [3, 3, 1, "", "locations"], [3, 2, 1, "", "solve"], [3, 3, 1, "", "vehicle_types"]], "pyvrp.PenaltyManager": [[3, 1, 1, "", "PenaltyManager"], [3, 1, 1, "", "PenaltyParams"]], "pyvrp.PenaltyManager.PenaltyManager": [[3, 2, 1, "", "get_booster_cost_evaluator"], [3, 2, 1, "", "get_cost_evaluator"], [3, 2, 1, "", "register_load_feasible"], [3, 2, 1, "", "register_time_feasible"]], "pyvrp.Population": [[3, 1, 1, "", "Population"], [3, 1, 1, "", "PopulationParams"]], "pyvrp.Population.Population": [[3, 2, 1, "", "__iter__"], [3, 2, 1, "", "__len__"], [3, 2, 1, "", "add"], [3, 2, 1, "", "clear"], [3, 2, 1, "", "get_tournament"], [3, 2, 1, "", "num_feasible"], [3, 2, 1, "", "num_infeasible"], [3, 2, 1, "", "select"]], "pyvrp.Population.PopulationParams": [[3, 4, 1, "", "generation_size"], [3, 4, 1, "", "lb_diversity"], [3, 3, 1, "", "max_pop_size"], [3, 4, 1, "", "min_pop_size"], [3, 4, 1, "", "nb_close"], [3, 4, 1, "", "nb_elite"], [3, 4, 1, "", "ub_diversity"]], "pyvrp.Result": [[3, 1, 1, "", "Result"]], "pyvrp.Result.Result": [[3, 2, 1, "", "cost"], [3, 2, 1, "", "has_statistics"], [3, 2, 1, "", "is_feasible"]], "pyvrp.Statistics": [[3, 1, 1, "", "Statistics"]], "pyvrp.Statistics.Statistics": [[3, 2, 1, "", "collect_from"], [3, 2, 1, "", "from_csv"], [3, 2, 1, "", "to_csv"]], "pyvrp._pyvrp": [[3, 1, 1, "", "Client"], [3, 1, 1, "", "CostEvaluator"], [3, 1, 1, "", "ProblemData"], [3, 1, 1, "", "Route"], [3, 1, 1, "", "Solution"], [3, 1, 1, "", "VehicleType"], [3, 1, 1, "", "XorShift128"]], "pyvrp._pyvrp.Client": [[3, 4, 1, "", "demand"], [3, 4, 1, "", "prize"], [3, 4, 1, "", "release_time"], [3, 4, 1, "", "required"], [3, 4, 1, "", "service_duration"], [3, 4, 1, "", "tw_early"], [3, 4, 1, "", "tw_late"], [3, 4, 1, "", "x"], [3, 4, 1, "", "y"]], "pyvrp._pyvrp.CostEvaluator": [[3, 2, 1, "", "cost"], [3, 2, 1, "", "load_penalty"], [3, 2, 1, "", "penalised_cost"], [3, 2, 1, "", "tw_penalty"]], "pyvrp._pyvrp.ProblemData": [[3, 2, 1, "", "centroid"], [3, 2, 1, "", "client"], [3, 2, 1, "", "depot"], [3, 2, 1, "", "dist"], [3, 2, 1, "", "duration"], [3, 3, 1, "", "num_clients"], [3, 3, 1, "", "num_vehicle_types"], [3, 3, 1, "", "num_vehicles"], [3, 2, 1, "", "vehicle_type"]], "pyvrp._pyvrp.Route": [[3, 2, 1, "", "centroid"], [3, 2, 1, "", "demand"], [3, 2, 1, "", "distance"], [3, 2, 1, "", "duration"], [3, 2, 1, "", "excess_load"], [3, 2, 1, "", "has_excess_load"], [3, 2, 1, "", "has_time_warp"], [3, 2, 1, "", "is_feasible"], [3, 2, 1, "", "prizes"], [3, 2, 1, "", "release_time"], [3, 2, 1, "", "service_duration"], [3, 2, 1, "", "time_warp"], [3, 2, 1, "", "vehicle_type"], [3, 2, 1, "", "visits"], [3, 2, 1, "", "wait_duration"]], "pyvrp._pyvrp.Solution": [[3, 2, 1, "", "distance"], [3, 2, 1, "", "excess_load"], [3, 2, 1, "", "get_neighbours"], [3, 2, 1, "", "get_routes"], [3, 2, 1, "", "has_excess_load"], [3, 2, 1, "", "has_time_warp"], [3, 2, 1, "", "is_feasible"], [3, 2, 1, "", "make_random"], [3, 2, 1, "", "num_clients"], [3, 2, 1, "", "num_routes"], [3, 2, 1, "", "prizes"], [3, 2, 1, "", "time_warp"], [3, 2, 1, "", "uncollected_prizes"]], "pyvrp._pyvrp.VehicleType": [[3, 4, 1, "", "capacity"], [3, 4, 1, "", "num_available"]], "pyvrp._pyvrp.XorShift128": [[3, 2, 1, "", "__call__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "max"], [3, 2, 1, "", "min"], [3, 2, 1, "", "rand"], [3, 2, 1, "", "randint"]], "pyvrp.crossover": [[0, 0, 0, "-", "selective_route_exchange"]], "pyvrp.crossover.selective_route_exchange": [[0, 5, 1, "", "selective_route_exchange"]], "pyvrp.diversity": [[1, 0, 0, "-", "_diversity"]], "pyvrp.diversity._diversity": [[1, 5, 1, "", "broken_pairs_distance"]], "pyvrp.plotting": [[2, 0, 0, "-", "plot_coordinates"], [2, 0, 0, "-", "plot_demands"], [2, 0, 0, "-", "plot_diversity"], [2, 0, 0, "-", "plot_instance"], [2, 0, 0, "-", "plot_objectives"], [2, 0, 0, "-", "plot_result"], [2, 0, 0, "-", "plot_route_schedule"], [2, 0, 0, "-", "plot_runtimes"], [2, 0, 0, "-", "plot_solution"], [2, 0, 0, "-", "plot_time_windows"]], "pyvrp.plotting.plot_coordinates": [[2, 5, 1, "", "plot_coordinates"]], "pyvrp.plotting.plot_demands": [[2, 5, 1, "", "plot_demands"]], "pyvrp.plotting.plot_diversity": [[2, 5, 1, "", "plot_diversity"]], "pyvrp.plotting.plot_instance": [[2, 5, 1, "", "plot_instance"]], "pyvrp.plotting.plot_objectives": [[2, 5, 1, "", "plot_objectives"]], "pyvrp.plotting.plot_result": [[2, 5, 1, "", "plot_result"]], "pyvrp.plotting.plot_route_schedule": [[2, 5, 1, "", "plot_route_schedule"]], "pyvrp.plotting.plot_runtimes": [[2, 5, 1, "", "plot_runtimes"]], "pyvrp.plotting.plot_solution": [[2, 5, 1, "", "plot_solution"]], "pyvrp.plotting.plot_time_windows": [[2, 5, 1, "", "plot_time_windows"]], "pyvrp.read": [[3, 5, 1, "", "read"], [3, 5, 1, "", "read_solution"]], "pyvrp.search": [[4, 0, 0, "-", "LocalSearch"], [4, 0, 0, "-", "_search"], [4, 0, 0, "-", "neighbourhood"]], "pyvrp.search.LocalSearch": [[4, 1, 1, "", "LocalSearch"]], "pyvrp.search.LocalSearch.LocalSearch": [[4, 2, 1, "", "add_node_operator"], [4, 2, 1, "", "add_route_operator"], [4, 2, 1, "", "get_neighbours"], [4, 2, 1, "", "intensify"], [4, 2, 1, "", "run"], [4, 2, 1, "", "search"], [4, 2, 1, "", "set_neighbours"]], "pyvrp.search._search": [[4, 1, 1, "", "Exchange10"], [4, 1, 1, "", "Exchange11"], [4, 1, 1, "", "Exchange20"], [4, 1, 1, "", "Exchange21"], [4, 1, 1, "", "Exchange22"], [4, 1, 1, "", "Exchange30"], [4, 1, 1, "", "Exchange31"], [4, 1, 1, "", "Exchange32"], [4, 1, 1, "", "Exchange33"], [4, 1, 1, "", "MoveTwoClientsReversed"], [4, 1, 1, "", "RelocateStar"], [4, 1, 1, "", "SwapStar"], [4, 1, 1, "", "TwoOpt"]], "pyvrp.search.neighbourhood": [[4, 1, 1, "", "NeighbourhoodParams"], [4, 5, 1, "", "compute_neighbours"]], "pyvrp.show_versions": [[3, 5, 1, "", "show_versions"]], "pyvrp.stop": [[5, 0, 0, "-", "MaxIterations"], [5, 0, 0, "-", "MaxRuntime"], [5, 0, 0, "-", "NoImprovement"], [5, 0, 0, "-", "StoppingCriterion"], [5, 0, 0, "-", "TimedNoImprovement"]], "pyvrp.stop.MaxIterations": [[5, 1, 1, "", "MaxIterations"]], "pyvrp.stop.MaxRuntime": [[5, 1, 1, "", "MaxRuntime"]], "pyvrp.stop.NoImprovement": [[5, 1, 1, "", "NoImprovement"]], "pyvrp.stop.StoppingCriterion": [[5, 1, 1, "", "StoppingCriterion"]], "pyvrp.stop.TimedNoImprovement": [[5, 1, 1, "", "TimedNoImprovement"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"crossov": 0, "oper": [0, 4], "divers": 1, "measur": 1, "plot": [2, 8, 9], "tool": 2, "pyvrp": [3, 10, 11], "search": [4, 8, 9], "node": 4, "rout": [4, 8, 9, 15], "stop": 5, "criteria": 5, "benchmark": [6, 11], "contribut": 7, "set": 7, "up": 7, "local": [7, 13], "instal": [7, 13], "build": 7, "python": 7, "extens": 7, "commit": 7, "chang": 7, "capacit": [8, 15], "vehicl": [8, 9, 15], "problem": [8, 9, 15], "import": 8, "load": 8, "instanc": [8, 9], "configur": [8, 9], "hybrid": [8, 9], "genet": [8, 9], "solv": [8, 9], "conclus": [8, 9], "time": [9, 15], "window": [9, 15], "basic": 9, "exampl": [9, 10, 13], "read": 9, "an": 9, "result": 9, "inspect": 9, "larger": 9, "gehr": 9, "homberg": 9, "ortec": 9, "from": [9, 13], "euro": 9, "meet": 9, "neurip": 9, "2022": 9, "competit": 9, "content": 10, "get": [10, 12], "start": 10, "api": 10, "refer": [10, 11], "develop": 10, "vrp": [11, 15], "solver": 11, "help": 12, "submit": 12, "bug": 12, "report": 12, "instruct": 13, "sourc": 13, "run": 13, "A": [14, 15], "brief": [14, 15], "introduct": [14, 15], "hg": 14, "support": 15, "variant": 15, "prize": 15, "collect": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Crossover operators": [[0, "crossover-operators"]], "Diversity measures": [[1, "diversity-measures"]], "Plotting tools": [[2, "plotting-tools"]], "PyVRP": [[3, "pyvrp"], [11, "pyvrp"]], "Search": [[4, "search"]], "Node operators": [[4, "node-operators"]], "Route operators": [[4, "route-operators"]], "Stopping criteria": [[5, "stopping-criteria"]], "Benchmarking": [[6, "benchmarking"]], "Contributing": [[7, "contributing"]], "Setting up a local installation": [[7, "setting-up-a-local-installation"]], "Building the Python extensions": [[7, "building-the-python-extensions"]], "Committing changes": [[7, "committing-changes"]], "Capacitated Vehicle Routing Problem": [[8, "Capacitated-Vehicle-Routing-Problem"]], "Imports": [[8, "Imports"]], "Loading the instance": [[8, "Loading-the-instance"]], "Plotting the instance": [[8, "Plotting-the-instance"]], "Configuring Hybrid Genetic Search": [[8, "Configuring-Hybrid-Genetic-Search"], [9, "Configuring-Hybrid-Genetic-Search"]], "Solving the instance": [[8, "Solving-the-instance"]], "Conclusion": [[8, "Conclusion"], [9, "Conclusion"]], "Vehicle Routing Problem with Time Windows": [[9, "Vehicle-Routing-Problem-with-Time-Windows"]], "Basic example": [[9, "Basic-example"]], "Read and plot instance": [[9, "Read-and-plot-instance"]], "Solving an instance": [[9, "Solving-an-instance"]], "Plot results": [[9, "Plot-results"]], "Inspect routes": [[9, "Inspect-routes"]], "Solving larger instances": [[9, "Solving-larger-instances"]], "Gehring & Homberger instance": [[9, "Gehring-&-Homberger-instance"]], "ORTEC instance (from the EURO Meets NeurIPS 2022 Competition)": [[9, "ORTEC-instance-(from-the-EURO-Meets-NeurIPS-2022-Competition)"]], "Contents": [[10, "contents"]], "Getting started": [[10, null]], "Examples": [[10, null]], "API reference": [[10, null]], "Developing PyVRP": [[10, null]], "Benchmarks": [[11, "benchmarks"]], "Reference VRP solvers": [[11, "reference-vrp-solvers"]], "Getting help": [[12, "getting-help"]], "Submitting a bug report": [[12, "submitting-a-bug-report"]], "Installation instructions": [[13, "installation-instructions"]], "Installing from source": [[13, "installing-from-source"]], "Running the examples locally": [[13, "running-the-examples-locally"]], "A brief introduction to HGS": [[14, "a-brief-introduction-to-hgs"]], "A brief introduction to VRP": [[15, "a-brief-introduction-to-vrp"]], "Supported VRP variants": [[15, "supported-vrp-variants"]], "Capacitated vehicle routing problem": [[15, "capacitated-vehicle-routing-problem"]], "Vehicle routing problem with time windows": [[15, "vehicle-routing-problem-with-time-windows"]], "Prize-collecting vehicle routing problem": [[15, "prize-collecting-vehicle-routing-problem"]]}, "indexentries": {"module": [[0, "module-pyvrp.crossover"], [0, "module-pyvrp.crossover.selective_route_exchange"], [1, "module-pyvrp.diversity"], [1, "module-pyvrp.diversity._diversity"], [2, "module-pyvrp.plotting"], [2, "module-pyvrp.plotting.plot_coordinates"], [2, "module-pyvrp.plotting.plot_demands"], [2, "module-pyvrp.plotting.plot_diversity"], [2, "module-pyvrp.plotting.plot_instance"], [2, "module-pyvrp.plotting.plot_objectives"], [2, "module-pyvrp.plotting.plot_result"], [2, "module-pyvrp.plotting.plot_route_schedule"], [2, "module-pyvrp.plotting.plot_runtimes"], [2, "module-pyvrp.plotting.plot_solution"], [2, "module-pyvrp.plotting.plot_time_windows"], [3, "module-pyvrp"], [3, "module-pyvrp.GeneticAlgorithm"], [3, "module-pyvrp.Model"], [3, "module-pyvrp.PenaltyManager"], [3, "module-pyvrp.Population"], [3, "module-pyvrp.Result"], [3, "module-pyvrp.Statistics"], [3, "module-pyvrp._pyvrp"], [3, "module-pyvrp.read"], [3, "module-pyvrp.show_versions"], [4, "module-pyvrp.search"], [4, "module-pyvrp.search.LocalSearch"], [4, "module-pyvrp.search._search"], [4, "module-pyvrp.search.neighbourhood"], [5, "module-pyvrp.stop"], [5, "module-pyvrp.stop.MaxIterations"], [5, "module-pyvrp.stop.MaxRuntime"], [5, "module-pyvrp.stop.NoImprovement"], [5, "module-pyvrp.stop.StoppingCriterion"], [5, "module-pyvrp.stop.TimedNoImprovement"]], "pyvrp.crossover": [[0, "module-pyvrp.crossover"]], "pyvrp.crossover.selective_route_exchange": [[0, "module-pyvrp.crossover.selective_route_exchange"]], "selective_route_exchange() (in module pyvrp.crossover.selective_route_exchange)": [[0, "pyvrp.crossover.selective_route_exchange.selective_route_exchange"]], "broken_pairs_distance() (in module pyvrp.diversity._diversity)": [[1, "pyvrp.diversity._diversity.broken_pairs_distance"]], "pyvrp.diversity": [[1, "module-pyvrp.diversity"]], "pyvrp.diversity._diversity": [[1, "module-pyvrp.diversity._diversity"]], "plot_coordinates() (in module pyvrp.plotting.plot_coordinates)": [[2, "pyvrp.plotting.plot_coordinates.plot_coordinates"]], "plot_demands() (in module pyvrp.plotting.plot_demands)": [[2, "pyvrp.plotting.plot_demands.plot_demands"]], "plot_diversity() (in module pyvrp.plotting.plot_diversity)": [[2, "pyvrp.plotting.plot_diversity.plot_diversity"]], "plot_instance() (in module pyvrp.plotting.plot_instance)": [[2, "pyvrp.plotting.plot_instance.plot_instance"]], "plot_objectives() (in module pyvrp.plotting.plot_objectives)": [[2, "pyvrp.plotting.plot_objectives.plot_objectives"]], "plot_result() (in module pyvrp.plotting.plot_result)": [[2, "pyvrp.plotting.plot_result.plot_result"]], "plot_route_schedule() (in module pyvrp.plotting.plot_route_schedule)": [[2, "pyvrp.plotting.plot_route_schedule.plot_route_schedule"]], "plot_runtimes() (in module pyvrp.plotting.plot_runtimes)": [[2, "pyvrp.plotting.plot_runtimes.plot_runtimes"]], "plot_solution() (in module pyvrp.plotting.plot_solution)": [[2, "pyvrp.plotting.plot_solution.plot_solution"]], "plot_time_windows() (in module pyvrp.plotting.plot_time_windows)": [[2, "pyvrp.plotting.plot_time_windows.plot_time_windows"]], "pyvrp.plotting": [[2, "module-pyvrp.plotting"]], "pyvrp.plotting.plot_coordinates": [[2, "module-pyvrp.plotting.plot_coordinates"]], "pyvrp.plotting.plot_demands": [[2, "module-pyvrp.plotting.plot_demands"]], "pyvrp.plotting.plot_diversity": [[2, "module-pyvrp.plotting.plot_diversity"]], "pyvrp.plotting.plot_instance": [[2, "module-pyvrp.plotting.plot_instance"]], "pyvrp.plotting.plot_objectives": [[2, "module-pyvrp.plotting.plot_objectives"]], "pyvrp.plotting.plot_result": [[2, "module-pyvrp.plotting.plot_result"]], "pyvrp.plotting.plot_route_schedule": [[2, "module-pyvrp.plotting.plot_route_schedule"]], "pyvrp.plotting.plot_runtimes": [[2, "module-pyvrp.plotting.plot_runtimes"]], "pyvrp.plotting.plot_solution": [[2, "module-pyvrp.plotting.plot_solution"]], "pyvrp.plotting.plot_time_windows": [[2, "module-pyvrp.plotting.plot_time_windows"]], "client (class in pyvrp._pyvrp)": [[3, "pyvrp._pyvrp.Client"]], "costevaluator (class in pyvrp._pyvrp)": [[3, "pyvrp._pyvrp.CostEvaluator"]], "geneticalgorithm (class in pyvrp.geneticalgorithm)": [[3, "pyvrp.GeneticAlgorithm.GeneticAlgorithm"]], "geneticalgorithmparams (class in pyvrp.geneticalgorithm)": [[3, "pyvrp.GeneticAlgorithm.GeneticAlgorithmParams"]], "model (class in pyvrp.model)": [[3, "pyvrp.Model.Model"]], "penaltymanager (class in pyvrp.penaltymanager)": [[3, "pyvrp.PenaltyManager.PenaltyManager"]], "penaltyparams (class in pyvrp.penaltymanager)": [[3, "pyvrp.PenaltyManager.PenaltyParams"]], "population (class in pyvrp.population)": [[3, "pyvrp.Population.Population"]], "populationparams (class in pyvrp.population)": [[3, "pyvrp.Population.PopulationParams"]], "problemdata (class in pyvrp._pyvrp)": [[3, "pyvrp._pyvrp.ProblemData"]], "result (class in pyvrp.result)": [[3, "pyvrp.Result.Result"]], "route (class in pyvrp._pyvrp)": [[3, "pyvrp._pyvrp.Route"]], "solution (class in pyvrp._pyvrp)": [[3, "pyvrp._pyvrp.Solution"]], "statistics (class in pyvrp.statistics)": [[3, "pyvrp.Statistics.Statistics"]], "vehicletype (class in pyvrp._pyvrp)": [[3, "pyvrp._pyvrp.VehicleType"]], "xorshift128 (class in pyvrp._pyvrp)": [[3, "pyvrp._pyvrp.XorShift128"]], "__call__() (xorshift128 method)": [[3, "pyvrp._pyvrp.XorShift128.__call__"]], "__init__() (xorshift128 method)": [[3, "pyvrp._pyvrp.XorShift128.__init__"]], "__iter__() (population method)": [[3, "pyvrp.Population.Population.__iter__"]], "__len__() (population method)": [[3, "pyvrp.Population.Population.__len__"]], "add() (population method)": [[3, "pyvrp.Population.Population.add"]], "add_client() (model method)": [[3, "pyvrp.Model.Model.add_client"]], "add_depot() (model method)": [[3, "pyvrp.Model.Model.add_depot"]], "add_edge() (model method)": [[3, "pyvrp.Model.Model.add_edge"]], "add_vehicle_type() (model method)": [[3, "pyvrp.Model.Model.add_vehicle_type"]], "capacity (vehicletype attribute)": [[3, "pyvrp._pyvrp.VehicleType.capacity"]], "centroid() (problemdata method)": [[3, "pyvrp._pyvrp.ProblemData.centroid"]], "centroid() (route method)": [[3, "pyvrp._pyvrp.Route.centroid"]], "clear() (population method)": [[3, "pyvrp.Population.Population.clear"]], "client() (problemdata method)": [[3, "pyvrp._pyvrp.ProblemData.client"]], "collect_from() (statistics method)": [[3, "pyvrp.Statistics.Statistics.collect_from"]], "cost() (costevaluator method)": [[3, "pyvrp._pyvrp.CostEvaluator.cost"]], "cost() (result method)": [[3, "pyvrp.Result.Result.cost"]], "data() (model method)": [[3, "pyvrp.Model.Model.data"]], "demand (client attribute)": [[3, "pyvrp._pyvrp.Client.demand"]], "demand() (route method)": [[3, "pyvrp._pyvrp.Route.demand"]], "depot() (problemdata method)": [[3, "pyvrp._pyvrp.ProblemData.depot"]], "dist() (problemdata method)": [[3, "pyvrp._pyvrp.ProblemData.dist"]], "distance() (route method)": [[3, "pyvrp._pyvrp.Route.distance"]], "distance() (solution method)": [[3, "pyvrp._pyvrp.Solution.distance"]], "duration() (problemdata method)": [[3, "pyvrp._pyvrp.ProblemData.duration"]], "duration() (route method)": [[3, "pyvrp._pyvrp.Route.duration"]], "excess_load() (route method)": [[3, "pyvrp._pyvrp.Route.excess_load"]], "excess_load() (solution method)": [[3, "pyvrp._pyvrp.Solution.excess_load"]], "from_csv() (statistics class method)": [[3, "pyvrp.Statistics.Statistics.from_csv"]], "from_data() (model class method)": [[3, "pyvrp.Model.Model.from_data"]], "generation_size (populationparams attribute)": [[3, "pyvrp.Population.PopulationParams.generation_size"]], "get_booster_cost_evaluator() (penaltymanager method)": [[3, "pyvrp.PenaltyManager.PenaltyManager.get_booster_cost_evaluator"]], "get_cost_evaluator() (penaltymanager method)": [[3, "pyvrp.PenaltyManager.PenaltyManager.get_cost_evaluator"]], "get_neighbours() (solution method)": [[3, "pyvrp._pyvrp.Solution.get_neighbours"]], "get_routes() (solution method)": [[3, "pyvrp._pyvrp.Solution.get_routes"]], "get_tournament() (population method)": [[3, "pyvrp.Population.Population.get_tournament"]], "has_excess_load() (route method)": [[3, "pyvrp._pyvrp.Route.has_excess_load"]], "has_excess_load() (solution method)": [[3, "pyvrp._pyvrp.Solution.has_excess_load"]], "has_statistics() (result method)": [[3, "pyvrp.Result.Result.has_statistics"]], "has_time_warp() (route method)": [[3, "pyvrp._pyvrp.Route.has_time_warp"]], "has_time_warp() (solution method)": [[3, "pyvrp._pyvrp.Solution.has_time_warp"]], "is_feasible() (result method)": [[3, "pyvrp.Result.Result.is_feasible"]], "is_feasible() (route method)": [[3, "pyvrp._pyvrp.Route.is_feasible"]], "is_feasible() (solution method)": [[3, "pyvrp._pyvrp.Solution.is_feasible"]], "lb_diversity (populationparams attribute)": [[3, "pyvrp.Population.PopulationParams.lb_diversity"]], "load_penalty() (costevaluator method)": [[3, "pyvrp._pyvrp.CostEvaluator.load_penalty"]], "locations (model property)": [[3, "pyvrp.Model.Model.locations"]], "make_random() (solution class method)": [[3, "pyvrp._pyvrp.Solution.make_random"]], "max() (xorshift128 static method)": [[3, "pyvrp._pyvrp.XorShift128.max"]], "max_pop_size (populationparams property)": [[3, "pyvrp.Population.PopulationParams.max_pop_size"]], "min() (xorshift128 static method)": [[3, "pyvrp._pyvrp.XorShift128.min"]], "min_pop_size (populationparams attribute)": [[3, "pyvrp.Population.PopulationParams.min_pop_size"]], "nb_close (populationparams attribute)": [[3, "pyvrp.Population.PopulationParams.nb_close"]], "nb_elite (populationparams attribute)": [[3, "pyvrp.Population.PopulationParams.nb_elite"]], "num_available (vehicletype attribute)": [[3, "pyvrp._pyvrp.VehicleType.num_available"]], "num_clients (problemdata property)": [[3, "pyvrp._pyvrp.ProblemData.num_clients"]], "num_clients() (solution method)": [[3, "pyvrp._pyvrp.Solution.num_clients"]], "num_feasible() (population method)": [[3, "pyvrp.Population.Population.num_feasible"]], "num_infeasible() (population method)": [[3, "pyvrp.Population.Population.num_infeasible"]], "num_routes() (solution method)": [[3, "pyvrp._pyvrp.Solution.num_routes"]], "num_vehicle_types (problemdata property)": [[3, "pyvrp._pyvrp.ProblemData.num_vehicle_types"]], "num_vehicles (problemdata property)": [[3, "pyvrp._pyvrp.ProblemData.num_vehicles"]], "penalised_cost() (costevaluator method)": [[3, "pyvrp._pyvrp.CostEvaluator.penalised_cost"]], "prize (client attribute)": [[3, "pyvrp._pyvrp.Client.prize"]], "prizes() (route method)": [[3, "pyvrp._pyvrp.Route.prizes"]], "prizes() (solution method)": [[3, "pyvrp._pyvrp.Solution.prizes"]], "pyvrp": [[3, "module-pyvrp"]], "pyvrp.geneticalgorithm": [[3, "module-pyvrp.GeneticAlgorithm"]], "pyvrp.model": [[3, "module-pyvrp.Model"]], "pyvrp.penaltymanager": [[3, "module-pyvrp.PenaltyManager"]], "pyvrp.population": [[3, "module-pyvrp.Population"]], "pyvrp.result": [[3, "module-pyvrp.Result"]], "pyvrp.statistics": [[3, "module-pyvrp.Statistics"]], "pyvrp._pyvrp": [[3, "module-pyvrp._pyvrp"]], "pyvrp.read": [[3, "module-pyvrp.read"]], "pyvrp.show_versions": [[3, "module-pyvrp.show_versions"]], "rand() (xorshift128 method)": [[3, "pyvrp._pyvrp.XorShift128.rand"]], "randint() (xorshift128 method)": [[3, "pyvrp._pyvrp.XorShift128.randint"]], "read() (in module pyvrp.read)": [[3, "pyvrp.read.read"]], "read_solution() (in module pyvrp.read)": [[3, "pyvrp.read.read_solution"]], "register_load_feasible() (penaltymanager method)": [[3, "pyvrp.PenaltyManager.PenaltyManager.register_load_feasible"]], "register_time_feasible() (penaltymanager method)": [[3, "pyvrp.PenaltyManager.PenaltyManager.register_time_feasible"]], "release_time (client attribute)": [[3, "pyvrp._pyvrp.Client.release_time"]], "release_time() (route method)": [[3, "pyvrp._pyvrp.Route.release_time"]], "required (client attribute)": [[3, "pyvrp._pyvrp.Client.required"]], "run() (geneticalgorithm method)": [[3, "pyvrp.GeneticAlgorithm.GeneticAlgorithm.run"]], "select() (population method)": [[3, "pyvrp.Population.Population.select"]], "service_duration (client attribute)": [[3, "pyvrp._pyvrp.Client.service_duration"]], "service_duration() (route method)": [[3, "pyvrp._pyvrp.Route.service_duration"]], "show_versions() (in module pyvrp.show_versions)": [[3, "pyvrp.show_versions.show_versions"]], "solve() (model method)": [[3, "pyvrp.Model.Model.solve"]], "time_warp() (route method)": [[3, "pyvrp._pyvrp.Route.time_warp"]], "time_warp() (solution method)": [[3, "pyvrp._pyvrp.Solution.time_warp"]], "to_csv() (statistics method)": [[3, "pyvrp.Statistics.Statistics.to_csv"]], "tw_early (client attribute)": [[3, "pyvrp._pyvrp.Client.tw_early"]], "tw_late (client attribute)": [[3, "pyvrp._pyvrp.Client.tw_late"]], "tw_penalty() (costevaluator method)": [[3, "pyvrp._pyvrp.CostEvaluator.tw_penalty"]], "ub_diversity (populationparams attribute)": [[3, "pyvrp.Population.PopulationParams.ub_diversity"]], "uncollected_prizes() (solution method)": [[3, "pyvrp._pyvrp.Solution.uncollected_prizes"]], "vehicle_type() (problemdata method)": [[3, "pyvrp._pyvrp.ProblemData.vehicle_type"]], "vehicle_type() (route method)": [[3, "pyvrp._pyvrp.Route.vehicle_type"]], "vehicle_types (model property)": [[3, "pyvrp.Model.Model.vehicle_types"]], "visits() (route method)": [[3, "pyvrp._pyvrp.Route.visits"]], "wait_duration() (route method)": [[3, "pyvrp._pyvrp.Route.wait_duration"]], "x (client attribute)": [[3, "pyvrp._pyvrp.Client.x"]], "y (client attribute)": [[3, "pyvrp._pyvrp.Client.y"]], "exchange10 (class in pyvrp.search._search)": [[4, "pyvrp.search._search.Exchange10"]], "exchange11 (class in pyvrp.search._search)": [[4, "pyvrp.search._search.Exchange11"]], "exchange20 (class in pyvrp.search._search)": [[4, "pyvrp.search._search.Exchange20"]], "exchange21 (class in pyvrp.search._search)": [[4, "pyvrp.search._search.Exchange21"]], "exchange22 (class in pyvrp.search._search)": [[4, "pyvrp.search._search.Exchange22"]], "exchange30 (class in pyvrp.search._search)": [[4, "pyvrp.search._search.Exchange30"]], "exchange31 (class in pyvrp.search._search)": [[4, "pyvrp.search._search.Exchange31"]], "exchange32 (class in pyvrp.search._search)": [[4, "pyvrp.search._search.Exchange32"]], "exchange33 (class in pyvrp.search._search)": [[4, "pyvrp.search._search.Exchange33"]], "localsearch (class in pyvrp.search.localsearch)": [[4, "pyvrp.search.LocalSearch.LocalSearch"]], "movetwoclientsreversed (class in pyvrp.search._search)": [[4, "pyvrp.search._search.MoveTwoClientsReversed"]], "neighbourhoodparams (class in pyvrp.search.neighbourhood)": [[4, "pyvrp.search.neighbourhood.NeighbourhoodParams"]], "relocatestar (class in pyvrp.search._search)": [[4, "pyvrp.search._search.RelocateStar"]], "swapstar (class in pyvrp.search._search)": [[4, "pyvrp.search._search.SwapStar"]], "twoopt (class in pyvrp.search._search)": [[4, "pyvrp.search._search.TwoOpt"]], "add_node_operator() (localsearch method)": [[4, "pyvrp.search.LocalSearch.LocalSearch.add_node_operator"]], "add_route_operator() (localsearch method)": [[4, "pyvrp.search.LocalSearch.LocalSearch.add_route_operator"]], "compute_neighbours() (in module pyvrp.search.neighbourhood)": [[4, "pyvrp.search.neighbourhood.compute_neighbours"]], "get_neighbours() (localsearch method)": [[4, "pyvrp.search.LocalSearch.LocalSearch.get_neighbours"]], "intensify() (localsearch method)": [[4, "pyvrp.search.LocalSearch.LocalSearch.intensify"]], "pyvrp.search": [[4, "module-pyvrp.search"]], "pyvrp.search.localsearch": [[4, "module-pyvrp.search.LocalSearch"]], "pyvrp.search._search": [[4, "module-pyvrp.search._search"]], "pyvrp.search.neighbourhood": [[4, "module-pyvrp.search.neighbourhood"]], "run() (localsearch method)": [[4, "pyvrp.search.LocalSearch.LocalSearch.run"]], "search() (localsearch method)": [[4, "pyvrp.search.LocalSearch.LocalSearch.search"]], "set_neighbours() (localsearch method)": [[4, "pyvrp.search.LocalSearch.LocalSearch.set_neighbours"]], "maxiterations (class in pyvrp.stop.maxiterations)": [[5, "pyvrp.stop.MaxIterations.MaxIterations"]], "maxruntime (class in pyvrp.stop.maxruntime)": [[5, "pyvrp.stop.MaxRuntime.MaxRuntime"]], "noimprovement (class in pyvrp.stop.noimprovement)": [[5, "pyvrp.stop.NoImprovement.NoImprovement"]], "stoppingcriterion (class in pyvrp.stop.stoppingcriterion)": [[5, "pyvrp.stop.StoppingCriterion.StoppingCriterion"]], "timednoimprovement (class in pyvrp.stop.timednoimprovement)": [[5, "pyvrp.stop.TimedNoImprovement.TimedNoImprovement"]], "pyvrp.stop": [[5, "module-pyvrp.stop"]], "pyvrp.stop.maxiterations": [[5, "module-pyvrp.stop.MaxIterations"]], "pyvrp.stop.maxruntime": [[5, "module-pyvrp.stop.MaxRuntime"]], "pyvrp.stop.noimprovement": [[5, "module-pyvrp.stop.NoImprovement"]], "pyvrp.stop.stoppingcriterion": [[5, "module-pyvrp.stop.StoppingCriterion"]], "pyvrp.stop.timednoimprovement": [[5, "module-pyvrp.stop.TimedNoImprovement"]]}})